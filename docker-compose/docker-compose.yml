version: '2'

services:

  mysql:
    image: mysql:5.6
    container_name: mysql
    restart: always
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --character-set-client-handshake=0
    volumes:
      - /Users/Gavin/Developer/storage/mysql:/var/lib/mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_USER=mysql
      - MYSQL_PASSWORD=mysql
      - MYSQL_ROOT_PASSWORD=root

  rabbitmq:
    image: rabbitmq:3.6.5-management
    container_name: rabbitmq
    restart: always
    volumes:
      - /Users/Gavin/Developer/storage/rabbitmq:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  redis:
    image: redis
    container_name: redis
    restart: always
    volumes:
      - /Users/Gavin/Developer/storage/redis:/data
    ports:
      - 6379:6379

#  zookeeper:
#    image: zookeeper
#    container_name: zookeeper
#    restart: always
#    ports:
#      - 2181:2181

#  eureka-server:
#    image: 192.168.1.88:5000/eureka-server
#    container_name: eureka-server
#    restart: always
#    ports:
#      - 8761:8761
#
#  config-server:
#    image: 192.168.1.88:5000/config-server
#    container_name: config-server
#    restart: always
#    ports:
#      - 8888:8888
#    links:
#      - eureka-server
#      - rabbitmq
#    environment:
#      - EUREKA_HOST=eureka-server
#      - RABBITMQ_HOST=rabbitmq
#    depends_on:
#      - eureka-server
#
#  oauth2-server:
#    image: 192.168.1.88:5000/oauth2-server
#    container_name: oauth2-server
#    restart: always
#    ports:
#      - 9999:9999
#    links:
#      - eureka-server
#      - mysql
#      - redis
#    environment:
#      - EUREKA_HOST=eureka-server
#      - MYSQL_HOST=mysql
#      - REDIS_HOST=redis
#    depends_on:
#      - eureka-server
#      - mysql
#      - redis
#
#  zuul-server:
#    image: 192.168.1.88:5000/zuul-server
#    container_name: zuul-server
#    restart: always
#    ports:
#      - 8000:8000
#    links:
#      - eureka-server
#      - oauth2-server
#    environment:
#      - EUREKA_HOST=eureka-server
#      - OAUTH_HOST=oauth2-server
#    depends_on:
#      - eureka-server
#      - oauth2-server
#
#  user-service:
#    image: 192.168.1.88:5000/user-service
#    container_name: user-service
#    restart: always
#    ports:
#      - 9101:9101
#    links:
#      - eureka-server
#      - mysql
#      - redis
#      - rabbitmq
#    environment:
#      - SPRING_PROFILES_ACTIVE=development
#      - EUREKA_HOST=eureka-server
#      - MYSQL_HOST=mysql
#      - REDIS_HOST=redis
#      - RABBITMQ_HOST=rabbitmq
#    depends_on:
#      - eureka-server
#      - config-server
#      - mysql
#      - redis
#      - rabbitmq

#  point-service:
#    image: 192.168.1.88:5000/point-service
#    container_name: point-service
#    restart: always
#    ports:
#      - 9102:9102
#    links:
#      - eureka-server
#      - mysql
#      - redis
#      - rabbitmq
#    environment:
#      - SPRING_PROFILES_ACTIVE=development
#      - EUREKA_HOST=eureka-server
#      - MYSQL_HOST=mysql
#      - REDIS_HOST=redis
#      - RABBITMQ_HOST=rabbitmq
#    depends_on:
#      - eureka-server
#      - config-server
#      - mysql
#      - redis
#      - rabbitmq
#
#  address-service:
#    image: 192.168.1.88:5000/address-service
#    container_name: address-service
#    restart: always
#    ports:
#      - 9103:9103
#    links:
#      - eureka-server
#      - mysql
#      - redis
#      - rabbitmq
#    environment:
#      - SPRING_PROFILES_ACTIVE=development
#      - EUREKA_HOST=eureka-server
#      - MYSQL_HOST=mysql
#      - REDIS_HOST=redis
#      - RABBITMQ_HOST=rabbitmq
#    depends_on:
#      - eureka-server
#      - config-server
#      - mysql
#      - redis
#      - rabbitmq
#
#  product-service:
#    image: 192.168.1.88:5000/product-service
#    container_name: product-service
#    restart: always
#    ports:
#      - 9104:9104
#    links:
#      - eureka-server
#      - mysql
#      - redis
#      - rabbitmq
#    environment:
#      - SPRING_PROFILES_ACTIVE=development
#      - EUREKA_HOST=eureka-server
#      - MYSQL_HOST=mysql
#      - REDIS_HOST=redis
#      - RABBITMQ_HOST=rabbitmq
#    depends_on:
#      - eureka-server
#      - config-server
#      - mysql
#      - redis
#      - rabbitmq
#
#  order-service:
#    image: 192.168.1.88:5000/order-service
#    container_name: order-service
#    restart: always
#    ports:
#      - 9105:9105
#    links:
#      - eureka-server
#      - mysql
#      - redis
#      - rabbitmq
#    environment:
#      - SPRING_PROFILES_ACTIVE=development
#      - EUREKA_HOST=eureka-server
#      - MYSQL_HOST=mysql
#      - REDIS_HOST=redis
#      - RABBITMQ_HOST=rabbitmq
#    depends_on:
#      - eureka-server
#      - config-server
#      - mysql
#      - redis
#      - rabbitmq
#
#  payment-service:
#    image: 192.168.1.88:5000/payment-service
#    container_name: payment-service
#    restart: always
#    ports:
#      - 9106:9106
#    links:
#      - eureka-server
#      - mysql
#      - redis
#      - rabbitmq
#    environment:
#      - SPRING_PROFILES_ACTIVE=development
#      - EUREKA_HOST=eureka-server
#      - MYSQL_HOST=mysql
#      - REDIS_HOST=redis
#      - RABBITMQ_HOST=rabbitmq
#    depends_on:
#      - eureka-server
#      - config-server
#      - mysql
#      - redis
#      - rabbitmq
#
#  delivery-service:
#    image: 192.168.1.88:5000/delivery-service
#    container_name: delivery-service
#    restart: always
#    ports:
#      - 9107:9107
#    links:
#      - eureka-server
#      - mysql
#      - redis
#      - rabbitmq
#    environment:
#      - SPRING_PROFILES_ACTIVE=development
#      - EUREKA_HOST=eureka-server
#      - MYSQL_HOST=mysql
#      - REDIS_HOST=redis
#      - RABBITMQ_HOST=rabbitmq
#    depends_on:
#      - eureka-server
#      - config-server
#      - mysql
#      - redis
#      - rabbitmq

#  zipkin-service:
#    image: 192.168.1.88:5000/zipkin-service
#    container_name: zipkin-service
#    restart: always
#    ports:
#      - 9411:9411
#    environment:
#      - RABBITMQ_HOST=192.168.1.88
#      - EUREKA_HOST=192.168.1.88
#    depends_on:
#      - eureka-server
#
#  hystrix-dashboard:
#    image: 192.168.1.88:5000/hystrix-dashboard
#    container_name: hystrix-dashboard
#    restart: always
#    ports:
#      - 8989:8989
#      - 8990:8990

#  registry:
#    image: registry
#    container_name: registry
#    volumes:
#      - /Users/Gavin/Developer/storage/registry:/var/lib/registry
#    ports:
#      - 5000:5000

#  elasticsearch:
#    image: elasticsearch
#    container_name: elasticsearch
#    volumes:
#      - /Users/Gavin/Developer/storage/elasticsearch:/usr/share/elasticsearch/data
#    ports:
#      - 9200:9200
#      - 9300:9300
#
#  logstash:
#    image: logstash
#    container_name: logstash
#    command: logstash -e 'input { udp { port => 4560 codec => json } } output { elasticsearch { hosts => "elasticsearch:9200" } }'
#    ports:
#      - 4560:4560/udp
#    links:
#      - elasticsearch
#
#  kibana:
#    image: kibana
#    container_name: kibana
#    ports:
#      - 5601:5601
#    links:
#      - elasticsearch